      1                                 ;
      2                                 ; tests CLR
      3                                 ;
      4                                 ; uses instructions MOV, BPT, HALT
      5                                 ;
      6                                 ; uses addressing modes 0, 6
      7                                 ;
      8 000000                                   .globl  start
      9                                 ;
     10 000000  000001                  one:     .word   1
     11 000002  177777                  n_one:   .word   -1
     12                                 ;
     13 000004  016701  177770          start:   mov     one,r1
     14 000010  016702  177766                   mov     n_one,r2
     15 000014  000003                           bpt
     16                                 ;
     17 000016  005001                           clr     r1
     18 000020  000003                           bpt
     19                                 ;
     20 000022  005002                           clr     r2
     21 000024  000003                           bpt
     22                                 ;
     23 000026  005067  177746                   clr     one
     24 000032  016704  177742                   mov     one,r4
     25 000036  000003                           bpt
     26                                 ;
     27 000040  005067  177736                   clr     n_one
     28 000044  016705  177732                   mov     n_one,r5
     29 000050  000003                           bpt
     30                                 ;
     31 000052  000000                           halt
     32 000054  000004'                          .end    start


n_one    000002 R  
one      000000 R  
pc     = 000007 %  
r0     = 000000 %  
r1     = 000001 %  
r2     = 000002 %  
r3     = 000003 %  
r4     = 000004 %  
r5     = 000005 %  
r6     = 000006 %  
r7     = 000007 %  
sp     = 000006 %  
start    000004 RG 
